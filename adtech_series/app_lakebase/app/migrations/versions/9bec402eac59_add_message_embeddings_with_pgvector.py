"""add message embeddings with pgvector

Revision ID: 9bec402eac59
Revises: 7bdda0f34a51
Create Date: 2025-08-12 17:30:18.862830

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import os
import pgvector.sqlalchemy  # required for autogenerate Vector type


# revision identifiers, used by Alembic.
revision: str = '9bec402eac59'
down_revision: Union[str, None] = '7bdda0f34a51'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Ensure pgvector extension is available
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('message_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=1024), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_history.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_embeddings_chat_id'), 'message_embeddings', ['chat_id'], unique=False)
    op.create_index(op.f('ix_message_embeddings_message_id'), 'message_embeddings', ['message_id'], unique=True)
    op.create_index('ix_message_embeddings_user_chat', 'message_embeddings', ['user_name', 'chat_id'], unique=False)
    op.create_index(op.f('ix_message_embeddings_user_name'), 'message_embeddings', ['user_name'], unique=False)
    # ### end Alembic commands ###

    # Create IVFFlat index for ANN search on embeddings using cosine distance
    lists = int(os.getenv('PGVECTOR_INDEX_LISTS', '100'))
    op.execute(
        f"CREATE INDEX IF NOT EXISTS ix_message_embeddings_embedding_ivfflat "
        f"ON message_embeddings USING ivfflat (embedding vector_cosine_ops) WITH (lists = {lists})"
    )


def downgrade() -> None:
    # Drop ANN index first
    op.execute("DROP INDEX IF EXISTS ix_message_embeddings_embedding_ivfflat")

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_embeddings_user_name'), table_name='message_embeddings')
    op.drop_index('ix_message_embeddings_user_chat', table_name='message_embeddings')
    op.drop_index(op.f('ix_message_embeddings_message_id'), table_name='message_embeddings')
    op.drop_index(op.f('ix_message_embeddings_chat_id'), table_name='message_embeddings')
    op.drop_table('message_embeddings')
    # ### end Alembic commands ###

    # Note: We do not drop the pgvector extension in downgrade to avoid impacting other objects.
